@page "/FirebaseTestPage"
@using Newtonsoft.Json.Linq
@inject IJSRuntime JsRuntime

<h1 class="font-sans text-3xl font-bold">FirebaseTestPage</h1>
<br>
<table>
    <td>
        <p class="mx-2">Collection ID</p>
    </td>
    <td>
        <input class="border py-2 px-3 w-32 mx-2" placeholder="Collection ID" @bind="UserId"/>
    </td>
    <td class="mx-2">FirstName</td>
    <td>
        <input class="border py-2 px-3 w-32 mx-2" placeholder="FirstName" @bind="FirstName"/>
    </td>
    <td class="mx-2">LastName</td>
    <td>
        <input class="border py-2 px-3 w-32	mx-2" placeholder="LastName" @bind="LastName"/>
    </td>
    <td class="mx-2">BornYear</td>
    <td>
        <input class="border py-2 px-3 w-32	mx-2" placeholder="BornYear" @bind="BornYear"/>
    </td>
</table>
<br>
<table>
    <tr>
        <td>
            <button class="btn btn-primary mx-2" @onclick="sendDB">sendDB</button>
            <button class="btn btn-primary mx-2" @onclick="getDB">getDB</button>
            <button class="btn btn-primary mx-2" @onclick="getPopUp">getpopup</button>
            <button class="btn btn-primary mx-2" @onclick="GetFireStoreData">closepopup</button>
        </td>
    </tr>
</table>
<br>
<table>
    <thead>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">UserID</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">First Name</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Last Name</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Born Year</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Option</th>
    </thead>

    @if (FirestoreData != null)
    {
        var fireStoreDataString = FirestoreData.ToString();

        var jArray = JArray.Parse(fireStoreDataString);

        JsRuntime.InvokeVoidAsync("console.log", "::: dataString::: " + jArray);

        foreach (JObject dataset in jArray)
        {
            var dataString = dataset.ToString();

            JsRuntime.InvokeVoidAsync("console.log", "::: dataString::: " + dataString);

            DataUserId = dataset.GetValue("id").ToString();
            DataFirst = dataset.GetValue("first").ToString();
            DataLast = dataset.GetValue("last").ToString();
            DataBorn = dataset.GetValue("born").ToString();

            JsRuntime.InvokeVoidAsync("console.log", "::: FireStoreUserID::: " + DataUserId);


            <tr>
                <td class="border-2 px-8 py-2">@DataUserId</td>
                <td class="border-2 px-8 py-2">@DataFirst</td>
                <td class="border-2 px-8 py-2">@DataLast</td>
                <td class="border-2 px-8 py-2">@DataBorn</td>
                <td class="border-2 px-8 py-2">
                    <button class="btn btn-primary mx-2" @onclick="e => DeleteFirebaseData(DataUserId)">Delete</button>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5" class="border-2 px-8 py-2 text-center">There is no Data</td>
        </tr>
    }
</table>
<br>
@if (ShowComponent)
{
    <LayerdPopup></LayerdPopup>
}

@code {

    private string UserId { get; set; }
    private string FirstName { get; set; }
    private string LastName { get; set; }
    private int BornYear { get; set; }
    private object FirestoreData { get; set; }
    bool ShowComponent { get; set; }

    public string DataUserId { get; set; }
    public string DataFirst { get; set; }
    public string DataLast { get; set; }
    public string DataBorn { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await GetFireStoreData();
    }

    private async void sendDB()
    {
        await JsRuntime.InvokeVoidAsync("FireStoreSendData", UserId, FirstName, LastName, BornYear);
        await GetFireStoreData();
    }

    private void getDB()
    {
        JsRuntime.InvokeVoidAsync("FireStoreGetData", UserId);
    }

    private void getPopUp()
    {
        ShowComponent = true;
    }

    private void closePopup()
    {
        ShowComponent = false;
    }

    private async Task GetFireStoreData()
    {
        FirestoreData = await JsRuntime.InvokeAsync<object>("FireStoreGetAllData");

        if (FirestoreData != null)
        {
            await JsRuntime.InvokeVoidAsync("console.log", "::: FirestoreData::: " + FirestoreData);
            await JsRuntime.InvokeVoidAsync("console.log", "firebaseData Type : " + FirestoreData.GetType());
        }
    }

    private async Task DeleteFirebaseData(string userId)
    {
        await JsRuntime.InvokeVoidAsync("console.log", "::: FireStoreUserIDDelete::: " + userId);

        await JsRuntime.InvokeVoidAsync("FireStoreDeleteData", userId);

        await GetFireStoreData();
    }

}