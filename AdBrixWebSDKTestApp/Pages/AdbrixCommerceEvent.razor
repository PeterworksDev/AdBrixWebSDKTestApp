@page "/AdBrixCommerceEvent"
@inject IJSRuntime JsRuntime

<h1 class="font-sans text-3xl font-bold" xmlns="http://www.w3.org/1999/html">AdBrix Commerce Event</h1>
<br>
<table class="shadow-lg bg-white">
    <thead>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Product Property</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Product 1</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Product 2</th>
    <th class="bg-blue-400 border-2 text-center text-white px-8 py-3">Product 3</th>
    </thead>
    <tr>
        <td class="border-2 px-8 py-2">Product Id</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductId1"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductId2"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductId3"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Product Name</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductName1"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductName2"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductName3"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Price</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductPrice1"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductPrice2"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductPrice3"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Quanity</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductQuanity1"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductQuanity2"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductQuanity3"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Discount</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductDiscount1"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductDiscount2"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3" @bind="ProductDiscount3"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Currency</td>
        <td class="border-2 px-8 py-2">
            <select class="border py-2 px-3" @bind="ProductCurrency1">
                @foreach (var items in CurrencyName())
                {
                    <option value=@items>@items</option>
                }
            </select>
        </td>
        <td class="border-2 px-8 py-2">
            <select class="border py-2 px-3" @bind="ProductCurrency2">
                @foreach (var items in CurrencyName())
                {
                    <option value=@items>@items</option>
                }
            </select>
        </td>
        <td class="border-2 px-8 py-2">
            <select class="border py-2 px-3" @bind="ProductCurrency3">
                @foreach (var items in CurrencyName())
                {
                    <option value=@items>@items</option>
                }
            </select>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Category</td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory1_0"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory1_1"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory1_2"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory1_3"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory1_4"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory2_0"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory2_1"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory2_2"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory2_3"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory2_4"/>
        </td>
        <td class="border-2 px-8 py-2">
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory3_0"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory3_1"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory3_2"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory3_3"/>
            <br>
            <input class="border py-2 px-3 my-0.5" @bind="ProductCategory3_4"/>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Product Set</td>
        <td class="border-2 px-8 py-2 text-center">
            <button class="btn btn-primary" @onclick="Product1Set">Product 1 set</button>
        </td>
        <td class="border-2 px-8 py-2 text-center">
            <button class="btn btn-primary" @onclick="Product2Set">Product 2 set</button>
        </td>
        <td class="border-2 px-8 py-2 text-center">
            <button class="btn btn-primary" @onclick="Product3Set">Product 3 set</button>
        </td>
    </tr>
    <tr>
        <td class="border-2 px-8 py-2">Product clear</td>
        <td colspan="3" class="border-2 px-8 py-2 text-center">
            <button class="btn btn-primary" @onclick="ProductClear">Product Clear</button>
        </td>
    </tr>
</table>
<br>
<h1 class="text-2xl font-sans">AdBrix Commerce Event Utility</h1>
<br>
<tr>
    <td class="font-bold">Purchase</td>
    <td>
        <p class="mx-2">OrderID</p>
    </td>
    <td>
        <input class="border py-2 px-3 w-32 mx-2" placeholder="OrderID" @bind="OrderID"/>
    </td>
    <td class="mx-2">Order Sale</td>
    <td>
        <input class="border py-2 px-3 w-32 mx-2" placeholder="Order Sale" @bind="OrderSale"/>
    </td>
    <td class="mx-2">Discount</td>
    <td>
        <input class="border py-2 px-3 w-32	mx-2" placeholder="Discount" @bind="Discount"/>
    </td>
    <td class="mx-2">Delivery Charge</td>
    <td>
        <input class="border py-2 px-3 w-32	mx-2" placeholder="Delivery Charge" @bind="DeliveryCharge"/>
    </td>
    <td class="mx-2">Payment Method</td>
    <td>
        <select class="border py-2 px-3 mx-2" @bind="PaymentMethodString">
            @foreach (var items in PaymentMethod())
            {
                <option value=@items>@items</option>
            }
        </select>
    </td>
    <td>
        <button class="btn btn-primary mx-2" @onclick="Purchase">Purchase</button>
    </td>
</tr>


@code {

    private string ProductId1 { get; set; }
    private string ProductId2 { get; set; }
    private string ProductId3 { get; set; }

    private string ProductName1 { get; set; }
    private string ProductName2 { get; set; }
    private string ProductName3 { get; set; }

    private Double ProductPrice1 { get; set; }
    private Double ProductPrice2 { get; set; }
    private Double ProductPrice3 { get; set; }

    private int ProductQuanity1 { get; set; }
    private int ProductQuanity2 { get; set; }
    private int ProductQuanity3 { get; set; }

    private Double ProductDiscount1 { get; set; }
    private Double ProductDiscount2 { get; set; }
    private Double ProductDiscount3 { get; set; }

    private string ProductCurrency1 { get; set; }
    private string ProductCurrency2 { get; set; }
    private string ProductCurrency3 { get; set; }

    private string ProductCategory1_0 { get; set; }
    private string ProductCategory1_1 { get; set; }
    private string ProductCategory1_2 { get; set; }
    private string ProductCategory1_3 { get; set; }
    private string ProductCategory1_4 { get; set; }

    private string ProductCategory2_0 { get; set; }
    private string ProductCategory2_1 { get; set; }
    private string ProductCategory2_2 { get; set; }
    private string ProductCategory2_3 { get; set; }
    private string ProductCategory2_4 { get; set; }

    private string ProductCategory3_0 { get; set; }
    private string ProductCategory3_1 { get; set; }
    private string ProductCategory3_2 { get; set; }
    private string ProductCategory3_3 { get; set; }
    private string ProductCategory3_4 { get; set; }

    private string OrderID { get; set; }
    private Double OrderSale { get; set; }
    private Double Discount { get; set; }
    private Double DeliveryCharge { get; set; }
    private string PaymentMethodString { get; set; }

    private List<String> CurrencyName()
    {
        List<String> currecyName = new List<string>();
        currecyName.Add("KRW");
        currecyName.Add("USD");
        currecyName.Add("JPY");
        currecyName.Add("EUR");
        currecyName.Add("GBP");
        currecyName.Add("CNY");
        currecyName.Add("TWD");
        currecyName.Add("HKD");
        currecyName.Add("IDR");
        currecyName.Add("RUB");
        currecyName.Add("THB");
        currecyName.Add("VND");
        currecyName.Add("MYR");

        return currecyName;
    }

    private List<string> PaymentMethod()
    {
        List<string> paymentMethod = new List<string>();
        paymentMethod.Add("CreditCard");
        paymentMethod.Add("BankTransfer");
        paymentMethod.Add("MobilePayment");
        paymentMethod.Add("ETC");

        return paymentMethod;
    }

    private List<object> productList = new List<object>();

    protected override async Task OnInitializedAsync()
    {
        await JsRuntime.InvokeVoidAsync("");
    }

    private async void Product1Set()
    {
        object categorySet;

        if (ProductCategory1_1 != null | ProductCategory1_2 != null | ProductCategory1_3 != null | ProductCategory1_4 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory1_0, ProductCategory1_1, ProductCategory1_2, ProductCategory1_3, ProductCategory1_4);
        }
        else if (ProductCategory1_1 != null | ProductCategory1_2 != null | ProductCategory1_3 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory1_0, ProductCategory1_1, ProductCategory1_2, ProductCategory1_3);
        }
        else if (ProductCategory1_1 != null | ProductCategory1_2 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory1_0, ProductCategory1_1, ProductCategory1_2);
        }
        else if (ProductCategory1_1 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory1_0, ProductCategory1_1);
        }
        else
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory1_0);
        }


        var productSet1 = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.product", ProductId1, ProductName1, ProductPrice1, ProductQuanity1, ProductDiscount1, ProductCurrency1, categorySet);

        if (productSet1 != null)
        {
            productList.Add(productSet1);
        }
    }

    private async void Product2Set()
    {
        object categorySet;

        if (ProductCategory2_1 != null | ProductCategory2_2 != null | ProductCategory2_3 != null | ProductCategory2_4 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory2_0, ProductCategory2_1, ProductCategory2_2, ProductCategory2_3, ProductCategory2_4);
        }
        else if (ProductCategory2_1 != null | ProductCategory2_2 != null | ProductCategory2_3 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory2_0, ProductCategory2_1, ProductCategory2_2, ProductCategory2_3);
        }
        else if (ProductCategory2_1 != null | ProductCategory2_2 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory2_0, ProductCategory2_1, ProductCategory2_2);
        }
        else if (ProductCategory2_1 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory2_0, ProductCategory2_1);
        }
        else
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory2_0);
        }


        var productSet2 = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.product", ProductId2, ProductName2, ProductPrice2, ProductQuanity2, ProductDiscount2, ProductCurrency2, categorySet);

        if (productSet2 != null)
        {
            productList.Add(productSet2);
        }
    }

    private async void Product3Set()
    {
        object categorySet;

        if (ProductCategory3_1 != null | ProductCategory3_2 != null | ProductCategory3_3 != null | ProductCategory3_4 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory3_0, ProductCategory3_1, ProductCategory3_2, ProductCategory3_3, ProductCategory3_4);
        }
        else if (ProductCategory3_1 != null | ProductCategory3_2 != null | ProductCategory3_3 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory3_0, ProductCategory3_1, ProductCategory3_2, ProductCategory3_3);
        }
        else if (ProductCategory3_1 != null | ProductCategory3_2 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory3_0, ProductCategory3_1, ProductCategory3_2);
        }
        else if (ProductCategory3_1 != null)
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory3_0, ProductCategory3_1);
        }
        else
        {
            categorySet = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.categories", ProductCategory3_0);
        }


        var productSet3 = await JsRuntime.InvokeAsync<object>("adbrix.commerceAttr.product", ProductId3, ProductName3, ProductPrice3, ProductQuanity3, ProductDiscount3, ProductCurrency3, categorySet);

        if (productSet3 != null)
        {
            productList.Add(productSet3);
        }
    }

    private async void Purchase()
    {
        await JsRuntime.InvokeVoidAsync("adbrix.common.purchase", OrderID, productList, OrderSale, Discount, DeliveryCharge, PaymentMethodString);
    }

    private void ProductClear()
    {
        if (productList.Count >= 1)
        {
            productList.Clear();
            JsRuntime.InvokeVoidAsync("alert", "Product is reset!!!");
        }
        else
        {
            JsRuntime.InvokeVoidAsync("alert", "There is no product to reset!!");
        }
    }

}